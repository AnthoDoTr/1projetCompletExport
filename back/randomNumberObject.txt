Pour sélectionner un nombre au hasard compris entre 1 et 3 d'objets dans votre base de données PostgreSQL, vous pouvez suivre les étapes suivantes :

Créez une fonction dans votre backend NestJS pour récupérer un objet aléatoire de votre base de données. Vous avez déjà fait cela.

Dans cette fonction, ajoutez une clause LIMIT à votre requête pour limiter le nombre d'objets renvoyés à 1. Par exemple, si votre table s'appelle "objets", votre requête SQL pourrait ressembler à ceci :

vbnet
Copy code
SELECT * FROM objets ORDER BY RANDOM() LIMIT 1;
Appelez cette fonction dans une boucle pour sélectionner un nombre aléatoire de 1 à 3. Par exemple, si votre fonction s'appelle getRandomObject, vous pouvez faire quelque chose comme ceci :
typescript
Copy code
const numberOfObjects = Math.floor(Math.random() * 3) + 1;

const selectedObjects = [];

for (let i = 0; i < numberOfObjects; i++) {
  const randomObject = await getRandomObject();
  selectedObjects.push(randomObject);
}

return selectedObjects;
Cela générera un nombre aléatoire de 1 à 3 à l'aide de Math.random() et de la méthode floor pour l'arrondir à un entier. Ensuite, la boucle sélectionnera cette quantité d'objets en appelant la fonction getRandomObject autant de fois que nécessaire et en stockant les résultats dans un tableau selectedObjects, qui sera renvoyé une fois que la boucle sera terminée.

Notez que si votre table contient moins de 3 objets, cette méthode renverra simplement tous les objets disponibles. Si vous voulez vous assurer qu'il y a toujours au moins 3 objets sélectionnés, vous pouvez remplacer numberOfObjects par Math.min(Math.floor(Math.random() * 3) + 1, 3) dans le code ci-dessus.